#!/usr/bin/env python
"""Extract alignment starting/ending locations from a maligner dp alignments_file"""
import argparse
import os, sys


from malignpy.common import wrap_file_function, logging_utils
from malignpy.maps.utils import read_maps
from malignpy.core.maligner_dp_alignments import Alignment
from malignpy.malign_viz.alignments import MalignVizAlignment

logger = logging_utils.create_logger('alignments_maligner_to_malign_viz')


parser = argparse.ArgumentParser(description="""Convert Maligner alignments to MalignViz json""")
parser.add_argument('alns_file', metavar='ALIGNMENTS_FILE', type=str,
                   help='Alignments file. Use "-" for STDIN')
# parser.add_argument('ref_maps', metavar='REF_MAP_FILE', type=str,
#                    help='Reference map file.')
# parser.add_argument('query_maps', metavar='QUERY_MAP_FILE', type=str,
#                    help='Query map file.')
parser.add_argument('-o', '--output', metavar='OUTPUT_FILE', help = "Output file name. (Default: STDOUT)")


@wrap_file_function('r', 'w')
def maligner_to_malign_viz(aln_file, output_file):
  
  REPORT_INTERVAL = 100
  header = aln_file.next().split()

  for line_num, l in enumerate(aln_file):

      if line_num > 0 and line_num % REPORT_INTERVAL == 0:
        logger.info("Converted %i alignments"%line_num)

      aln = Alignment(l)
      mviz_aln = MalignVizAlignment.from_maligner(aln)
      output_file.write(mviz_aln.to_json() + '\n')


if __name__ == '__main__':

  args = parser.parse_args()

  output_file = args.output if args.output is not None else sys.stdout
  input_file = args.alns_file if (args.alns_file is not None and args.alns_file != '-') else sys.stdin

  logger.info('Alignment file: %s', "STDIN" if input_file == sys.stdin else args.alns_file)
  logger.info('Output file: %s', 'STDOUT' if args.output is None else args.output)

  logger.info('Converting alignments... (patience)')
  maligner_to_malign_viz(input_file, output_file)
