#!/usr/bin/env python
"""Extract query maps from the alignment XML files and save as a maligner maps file"""
import xml.etree.cElementTree as ET
import argparse
import sys

from malignpy.common import wrap_file_function, logging_utils
from malignpy.schwartz.parse_soma_alignments import get_query_maps


logger = logging_utils.create_logger('soma_query_maps')

parser = argparse.ArgumentParser(
  description="""Extract query maps from the SOMA alignment xml file and save in the maligner maps format."""
)

parser.add_argument('alns_file', metavar='ALIGNMENTS_FILE',
  type = 'str', help='Alignments file. Use "-" for STDIN')
parser.add_argument('-o', '--output', metavar='OUTPUT_FILE', help = "Output file name. (Default: STDOUT)")


@wrap_file_function('r', 'w')
def run(input_file, output_file):

  tree = ET.parse(input_file)
  root = tree.getroot()

  query_maps = get_query_maps(root)

  for m in query_maps:
    m.write_as_maligner(output_file)


if __name__ == '__main__':

  args = parser.parse_args()
  output_file = args.output if args.output is not None else sys.stdout
  input_file = args.alns_file if (args.alns_file is not None and args.alns_file != '-') else sys.stdin

  logger.info("Output file: %s"%("STDOUT" if output_file == sys.stdout else output_file))
  logger.info("Input file: %s"%("STDIN" if input_file == sys.stdin else input_file ))
  logger.info("Parsing and writing query maps... (patience)")


  run(input_file, output_file)


  logger.info("Done.")

